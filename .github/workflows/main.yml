name: Frobarn Kart

on:
  push:
    branches:
      - deploy

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          python manage.py test

  docker:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/kart:1.0 .

      - name: Push Docker Image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/kart:1.0

  # deploy:
  #   needs: docker
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v2

  #     - name: Install Kubectl
  #       uses: azure/setup-kubectl@v3
  #       with:
  #         version: 'latest'

  #     - name: Set Up Kubeconfig
  #       run: |
  #         echo "config---> ${{ secrets.KUBECONFIG_BASE64 }}"
  #         echo "${{ secrets.KUBECONFIG_BASE64 }}" | base64 --decode > $HOME/.kube/config
  #         chmod 600 $HOME/.kube/config
  #         export KUBECONFIG=$HOME/.kube/config
  #         kubectl config view

  #     - name: Verify Kubernetes Cluster Connection
  #       run: |
  #         kubectl get nodes

  #     - name: Deploy to Kubernetes
  #       run: |
  #         kubectl apply -f k8/deployment.yaml
  #         kubectl apply -f k8/service.yaml
  #         kubectl rollout status deployment webapp